{"version":3,"sources":["js/data/generators.js","js/data/options.js","js/colorCalc.jsx","components/Generator.jsx","js/data/upgrades.js","components/Upgrade.jsx","js/interval.jsx","js/data/generatorUpgrades.js","js/data/values.js","js/upgradeHandler.jsx","components/Notification.jsx","components/Game.jsx","js/click.js","components/Tooltip.jsx","components/Option.jsx","components/Options.jsx","App.js","reportWebVitals.js","index.js"],"names":["generators","name","baseRps","basePrice","price","count","vertices","image","imageAnim","levelThresholds","threshold","bonus","options","title","tooltip","type","value","typeValues","redToRgb","red","rgb","parseFloat","toFixed","i","next","Math","floor","rgbToRed","buy","currentRgb","priceRgb","priceRed","currentRed","console","log","suffixes","handleBigNumber","number","log10","suffix","text","pow","Generator","onClick","genId","useState","gen","width","setWidth","level","setLevel","setImage","onBuy","t","prevT","widthPercent","useEffect","id","className","onMouseEnter","document","querySelector","classList","contains","onMouseLeave","rps","style","src","process","alt","upgrades","description","maxRanks","effect","effectModifier","Upgrade","upgradeId","upgrade","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","generatorUpgrades","MaxRanks","values","color","rpsMultiplier","clickValue","clickMultiplier","vertexRpsMultiplier","vertexClickMultiplier","clickValuePerVertex","handleUpgrade","modifier","typeArray","split","upgradeType","multiplier","multiplyValue","addAmount","addValue","time","forEach","c","addColor","vertexUpgrade","Notification","important","Game","useCookies","cookies","setCookie","left","right","isMenuOpen","setIsMenuOpen","framerate","setFramerate","isActive","setIsActive","generatorElements","setGeneratorElements","upgradeElements","setUpgradeElements","main","header","background","container","transformContainer","elements","setElements","sideLength","setSideLength","r","g","b","p","setColor","clickValueRed","setClickValueRed","clickValueRgb","setClickValueRgb","setRps","rpt","setRpt","rgbps","setRgbps","rgbpt","setRgbpt","generatorCount","upgradeCount","totalMultiplier","stats","setStats","notifs","setNotifs","checkCanAfford","Object","assign","add","remove","bought","upgradeElement","incrementRgb","checkRgb","calculateStats","genCount","genRps","mult","clickMult","totalClickValue","totalRps","checkMultiplier","map","remainder","priceIncreasePercentage","tryBuy","onUpgrade","sort","a","tryBuyUpgrade","openMenu","dir","menu","button","toggle","firstChild","innerText","length","property","opt","offsetHeight","addEventListener","hidden","window","generatorData","push","upgradeData","optionsData","setTimeout","addNotification","bg","backgroundColor","leftMenu","rightMenu","leftStats","rightStats","theSquare","e","x","y","randomWidthOffset","randomHeightOffset","clientX","clientY","random","createElement","appendChild","textX","offsetWidth","textY","top","clickEffect","position","fx","deg","transform","distanceY","pageYOffset","getBoundingClientRect","distanceX","pageXOffset","click","height","Tooltip","Option","optionId","action","setAction","isEnabled","setIsEnabled","dropdownValue","setDropdownValue","setTooltip","el","v","onChange","target","Options","dismiss","removeCookie","optionsElements","setOptionsElements","optionCallback","o","reset","toString","location","reload","currentTarget","squareElement","App","isOptionsOpen","setIsOptionsOpen","toggleOptions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.05712be0.chunk.js","sourcesContent":["export const generators = [\r\n    //tier 1\r\n    {\r\n        name: \"Triangle\",\r\n        baseRps: 0.2, //150s\r\n        basePrice: [30,0,0],\r\n        price: [30,0,0],\r\n        count: 0,\r\n        vertices: 3,\r\n        image: \"/assets/generators/triangle.png\",\r\n        imageAnim: \"/assets/generators/triangle-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Square\",\r\n        baseRps: 1, //200s\r\n        basePrice: [200,0,0],\r\n        price: [200,0,0],\r\n        count: 0,\r\n        vertices: 4,\r\n        image: \"/assets/generators/square.png\",\r\n        imageAnim: \"/assets/generators/square-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Pentagon\",\r\n        baseRps: 3, //256s\r\n        basePrice: [0,3,0],\r\n        price: [0,3,0],\r\n        count: 0,\r\n        vertices: 5,\r\n        image: \"/assets/generators/pentagon.png\",\r\n        imageAnim: \"/assets/generators/pentagon-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Hexagon\",\r\n        baseRps: 15, //307.2s\r\n        basePrice: [0,18,0],\r\n        price: [0,18,0],\r\n        count: 0,\r\n        vertices: 6,\r\n        image: \"/assets/generators/hexagon.png\",\r\n        imageAnim: \"/assets/generators/hexagon-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Septagon\",\r\n        baseRps: 50, //409.6s\r\n        basePrice: [0,80,0],\r\n        price: [0,80,0],\r\n        count: 0,\r\n        vertices: 7,\r\n        image: \"/assets/generators/septagon.png\",\r\n        imageAnim: \"/assets/generators/septagon-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Octagon\",\r\n        baseRps: 125, //524.288s\r\n        basePrice: [0,0,1],\r\n        price: [0,0,1],\r\n        count: 0,\r\n        vertices: 8,\r\n        image: \"/assets/generators/octagon.png\",\r\n        imageAnim: \"/assets/generators/octagon-anim.gif\"\r\n    },\r\n\r\n    //tier 2\r\n    {\r\n        name: \"Pyramid\",\r\n        baseRps: 750, //436.9s\r\n        basePrice: [0,0,5],\r\n        price: [0,0,5],\r\n        count: 0,\r\n        vertices: 5,\r\n        image: \"/assets/generators/pyramid.png\",\r\n        imageAnim: \"/assets/generators/pyramid-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Cube\",\r\n        baseRps: 3000, //524.288s\r\n        basePrice: [0,0,24],\r\n        price: [0,0,24],\r\n        count: 0,\r\n        vertices: 8,\r\n        image: \"/assets/generators/cube.png\",\r\n        imageAnim: \"/assets/generators/cube-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Dodecahedron\",\r\n        baseRps: 12000, //546.13s\r\n        basePrice: [0,0,100],\r\n        price: [0,0,100],\r\n        count: 0,\r\n        vertices: 20,\r\n        image: \"/assets/generators/dodecahedron.png\",\r\n        imageAnim: \"/assets/generators/dodecahedron-anim.gif\"\r\n    },\r\n]\r\n\r\nexport const levelThresholds = [\r\n    {\r\n        threshold: 10,\r\n        bonus: 1.1\r\n    },\r\n    {\r\n        threshold: 25,\r\n        bonus: 1.2\r\n    },\r\n    {\r\n        threshold: 50,\r\n        bonus: 1.25\r\n    },\r\n    {\r\n        threshold: 75,\r\n        bonus: 1.1\r\n    },\r\n    {\r\n        threshold: 100,\r\n        bonus: 1.5\r\n    },\r\n    {\r\n        threshold: 150,\r\n        bonus: 1.2\r\n    },\r\n    {\r\n        threshold: 200,\r\n        bonus: 1.5\r\n    },\r\n    {\r\n        threshold: 250,\r\n        bonus: 1.2\r\n    },\r\n    {\r\n        threshold: 300,\r\n        bonus: 1.25\r\n    },\r\n    {\r\n        threshold: 400,\r\n        bonus: 1.25\r\n    },\r\n    {\r\n        threshold: 500,\r\n        bonus: 1.25\r\n    },\r\n]","export const options = [\r\n    //types: switch, dropdown, custom?\r\n    {\r\n        title: \"Enable animations\",\r\n        tooltip: \"Enable animations like Generators spinning when hovering over them\",\r\n        type: \"switch\",\r\n        value: true,\r\n    },\r\n    {\r\n        title: \"Enable click effect\",\r\n        tooltip: \"Enables a graphical effect when clicking\",\r\n        type: \"switch\",\r\n        value: true,\r\n    },\r\n    {\r\n        title: \"Click effect\",\r\n        tooltip: \"What effect to be shown when clicking\",\r\n        type: \"dropdown\",\r\n        typeValues: [\"ripple\", \"material ripple\", \"splash\"],\r\n        value: \"material ripple\",\r\n    },\r\n    {\r\n        title: \"Enable click text\",\r\n        tooltip: \"Enables the the text shown when clicking\",\r\n        type: \"switch\",\r\n        value: true,\r\n    },\r\n    {\r\n        title: \"Show stats on-screen\",\r\n        tooltip: \"Show statistics like total multiplier, vertice count, amount of upgrades purchased etc. on the main screen\",\r\n        type: \"switch\",\r\n        value: false,\r\n    },\r\n    {\r\n        title: \"Framerate\",\r\n        tooltip: \"How many times numbers are calculated each second. Does not affect RPS. High values might have a negative impact on performance\",\r\n        type: \"dropdown\",\r\n        typeValues: [144, 120, 75, 60, 30, 15, 10, 5, 1],\r\n        value: 30,\r\n    },\r\n    {\r\n        title: \"Background color update frequency\",\r\n        tooltip: \"How many times the background color refreshes each second. Values higher than 5 might have a negative impact on performance\",\r\n        type: \"dropdown\",\r\n        typeValues: [10, 5, 2, 1],\r\n        value: 5,\r\n    },\r\n    {\r\n        title: \"Reset game\",\r\n        tooltip: \"Resets your progress, not just prestige. Make sure you want to do this before continuing!\",\r\n        type: \"button\",\r\n        value: \"reset\",\r\n    },\r\n]","//turns a value of red into rgb\r\nexport const redToRgb = (red) => {\r\n    let r = parseFloat(red.toFixed(2))\r\n    let rgb = [r,0,0,0]\r\n\r\n    for(let i = 0; i < 3; i++){\r\n        if(rgb[i] >= 256){\r\n            let next = Math.floor(rgb[i]/256)\r\n            rgb[i+1] = next\r\n            rgb[i] %= 256\r\n        }\r\n    }\r\n\r\n    return rgb\r\n}\r\n\r\n//turns a value of rgb into red\r\nexport const rgbToRed = (rgb) => {\r\n    for(let i = 4; i > 0; i--){\r\n        if(i === 0) break\r\n        \r\n        if(rgb[i] > 0){\r\n            rgb[i-1] += rgb[i] * 256\r\n            rgb[i] = 0\r\n        }\r\n    }\r\n\r\n    let red = rgb[0]\r\n\r\n    return red\r\n}\r\n\r\nexport const buy = (currentRgb, priceRgb) => {\r\n    let priceRed = rgbToRed(priceRgb)\r\n    let currentRed = rgbToRed(currentRgb)\r\n\r\n    if(currentRed >= priceRed){\r\n        currentRed -= priceRed\r\n    } else {\r\n        console.log(\"cannot afford!!!\")\r\n        return null\r\n    }\r\n\r\n    return redToRgb(currentRed)\r\n}\r\n\r\nconst suffixes = [\r\n    \"K\",\r\n    \"M\",\r\n    \"B\",\r\n    \"T\",\r\n    \"Qa\",\r\n    \"Qi\",\r\n    \"Sx\",\r\n    \"Sp\",\r\n    \"O\",\r\n    \"N\",\r\n    \"D\",\r\n]\r\n\r\nexport function handleBigNumber(number){\r\n    if(number >= 1000){\r\n        let log = Math.floor(Math.log10(number))\r\n        let suffix = Math.floor(log/3) - 1\r\n        let text = (number/Math.pow(10,log - (log % 3))).toFixed(3)\r\n\r\n        return `${text} ${suffixes[suffix]}`\r\n    } else {\r\n        return number\r\n    }\r\n}","import { useEffect, useState } from \"react\"\r\nimport \"./styles/sideMenuItems.css\"\r\nimport { generators, levelThresholds } from  \"../js/data/generators.js\"\r\nimport { options } from \"../js/data/options\"\r\nimport { handleBigNumber } from \"../js/colorCalc\"\r\n\r\n\r\nconst Generator = ({onClick, genId}) => {\r\n\r\n    const [gen, setGen] = useState(generators[genId])\r\n    const [width, setWidth] = useState(0)\r\n    const [level, setLevel] = useState(0)\r\n    const [image, setImage] = useState(gen.image)\r\n\r\n    useEffect(() => {\r\n        onBuy()\r\n    }, [])\r\n    \r\n    //Makes sure the progress bar to the next level has the correct width\r\n    function onBuy(){\r\n        for(const i in levelThresholds){\r\n            const t = levelThresholds[i].threshold\r\n            let prevT = 0\r\n            \r\n            if(i > 0){\r\n                prevT = levelThresholds[i-1].threshold\r\n            }\r\n            \r\n            if(gen.count < t){\r\n                const widthPercent = (((gen.count - prevT) / (t - prevT)) % t) * 100\r\n                setWidth(widthPercent)\r\n                setLevel(i)\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id={`generator-${genId}`} className=\"side-menu-item cannot-afford\" onClick={() => {\r\n            onClick()\r\n            onBuy()\r\n        }} \r\n        //prevent images from animating when hovering over things you can't afford, or when animations are disabled\r\n        onMouseEnter={() => { \r\n            if(options[0].value){\r\n                const el = document.querySelector(`#generator-${genId}`)\r\n                if(!el.classList.contains(\"cannot-afford\")){\r\n                    setImage(gen.imageAnim)\r\n                }            \r\n            }\r\n        }\r\n        } \r\n        onMouseLeave={() => setImage(gen.image)} >\r\n                <h5>{gen.name}</h5>\r\n            <div>\r\n                <p>+{gen.rps ? handleBigNumber(gen.rps.toFixed(2)) : gen.baseRps}/s</p>\r\n                <p>({gen.count > 0 ? handleBigNumber((gen.rps * gen.count).toFixed(2)) : \"0\"}/s)</p>\r\n                <div className=\"generator-price\">\r\n                    <span>{gen.price[0]}</span>\r\n                    <span>{gen.price[1]}</span>\r\n                    <span>{gen.price[2]}</span>\r\n                </div>\r\n                <div className=\"generator-count\">\r\n                    <span>{gen.count}</span>\r\n                    <div className=\"generator-count-bar\" style={{width: `${width}%`}}></div>\r\n                    <span className=\"next-level-bonus\">\r\n                        +{((levelThresholds[level].bonus-1)*100).toFixed(0)}%\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <img className=\"generator-image\" src={process.env.PUBLIC_URL + image} alt={gen.name} />\r\n            <div className=\"prevent-flicker\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Generator","export const upgrades = [\r\n    {\r\n        name: \"Paint brush\",\r\n        description: \"Adds +1 red to your clicks\",\r\n        maxRanks: 10,\r\n        price: [100,0,0],\r\n        effect: 1,\r\n        effectModifier: \"add\" /* add, sub, multiply, time */,\r\n        type: \"click\",\r\n    },\r\n    {\r\n        name: \"Paint bucket\",\r\n        description: \"Adds +0.1 red to your clicks for each vertex acquired\",\r\n        maxRanks: 5,\r\n        price: [0,10,0],\r\n        effect: 0.1,\r\n        effectModifier: \"add\",\r\n        type: \"vertex.click\",\r\n    },\r\n    {\r\n        name: \"Vertex extraction\",\r\n        description: \"Gains +0.1% RPS for each vertex owned\",\r\n        maxRanks: 10,\r\n        price: [0,10,0],\r\n        effect: 0.001,\r\n        effectModifier: \"add\",\r\n        type: \"vertex.rps\",\r\n    },\r\n    {\r\n        name: \"Brighter colors\",\r\n        description: \"You gain +10% rps\",\r\n        price: [100,1,0],\r\n        effect: 1.1,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Higher saturation\",\r\n        description: \"You gain +10% rps\",\r\n        price: [0,3,0],\r\n        effect: 1.1,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Redder reds\",\r\n        description: \"You gain +15% rps\",\r\n        price: [0,8,0],\r\n        effect: 1.15,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Bluer blues\",\r\n        description: \"You gain +15% rps\",\r\n        price: [0,25,0],\r\n        effect: 1.15,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Greener greens\",\r\n        description: \"You gain +15% rps\",\r\n        price: [0,75,0],\r\n        effect: 1.15,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"CMYK\",\r\n        description: \"You gain +25% rps\",\r\n        price: [0,100,0],\r\n        effect: 1.25,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Better color mixing\",\r\n        description: \"You gain +25% rps\",\r\n        price: [0,150,0],\r\n        effect: 1.25,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"JPEG artifacts\",\r\n        description: \"For some reasons gains you +1% rps\",\r\n        price: [0,100,0],\r\n        effect: 1.01,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    //add color to upgrade types\r\n    {\r\n        name: \"SCART connectors\",\r\n        description: \"Multiples click value by 2%\",\r\n        price: [0,1,0],\r\n        effect: 1.02,\r\n        effectModifier: \"multiply\",\r\n        type: \"click\",\r\n    },\r\n    {\r\n        name: \"RCA connectors\",\r\n        description: \"Multiples click value by 4%\",\r\n        price: [0,4,0],\r\n        effect: 1.04,\r\n        effectModifier: \"multiply\",\r\n        type: \"click\",\r\n    },\r\n    {\r\n        name: \"VGA connectors\",\r\n        description: \"Multiples click value by 6%\",\r\n        price: [0,75,0],\r\n        effect: 1.06,\r\n        effectModifier: \"multiply\",\r\n        type: \"click\",\r\n    },\r\n    {\r\n        name: \"DVI connectors\",\r\n        description: \"Multiples click value by 8%\",\r\n        price: [0,200,0],\r\n        effect: 1.08,\r\n        effectModifier: \"multiply\",\r\n        type: \"click\",\r\n    },\r\n    {\r\n        name: \"HDMI connectors\",\r\n        description: \"Multiples click value by 10%\",\r\n        price: [0,0,2],\r\n        effect: 1.1,\r\n        effectModifier: \"multiply\",\r\n        type: \"click\",\r\n    },\r\n    {\r\n        name: \"DisplayPort connectors\",\r\n        description: \"Multiples click value by 10%\",\r\n        price: [0,0,8],\r\n        effect: 1.1,\r\n        effectModifier: \"multiply\",\r\n        type: \"click\",\r\n    },\r\n]","import \"./styles/sideMenuItems.css\"\r\nimport { upgrades } from \"../js/data/upgrades\"\r\nimport { useState } from \"react\"\r\n\r\nconst Upgrade = ({onClick, upgradeId}) => {\r\n\r\n    const [upgrade, setUpgrade] = useState(upgrades[upgradeId])\r\n\r\n    return(\r\n        <div id={`upgrade-${upgradeId}`} className=\"side-menu-item cannot-afford\" onClick={onClick}>\r\n            <div>\r\n                <h5>{upgrade.name}</h5>\r\n                <p>{upgrade.description}</p>\r\n                <div className=\"generator-price\">\r\n                    <span>{upgrade.price[0]}</span>\r\n                    <span>{upgrade.price[1]}</span>\r\n                    <span>{upgrade.price[2]}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"prevent-flicker\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upgrade","import { useRef, useEffect } from \"react\"\r\n\r\nexport const useInterval = (callback, delay) => {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }","export const generatorUpgrades = [\r\n    //Triangle\r\n    {\r\n        name: \"Sharper edges\",\r\n        description: \"Your Triangles are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [150,0,0],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    {\r\n        name: \"I guess it kinda looks like a cursor?\",\r\n        description: \"Each triangle add +1 red to your clicks\",\r\n        MaxRanks: 5,\r\n        price: [0,8,0],\r\n        effect: 2,\r\n        effectModifier: \"add\"\r\n    },\r\n    //Square\r\n    { \r\n        name: \"Straighter corners\",\r\n        description: \"Your Squares are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [235,3,0],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    { \r\n        name: \"Square root\",\r\n        description: \"Adds √(amount of Squares)% to your rps\",\r\n        MaxRanks: 1,\r\n        price: [0,12,0],\r\n        effect: 1,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    //Pentagon\r\n    {\r\n        name: \"Demonic angles\",\r\n        description: \"Your Pentagons are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [0,15,0],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    //Hexagon\r\n    {\r\n        name: \"Benzene\",\r\n        description: \"Your Hexagons are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [0,90,0],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    //Septagons\r\n    {\r\n        name: \"Hepta or Septa?\",\r\n        description: \"Your Septagons are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [0,145,1],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    //Octagons\r\n    {\r\n        name: \"1080º\",\r\n        description: \"Your Octagons are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [0,0,5],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    }\r\n]","export const values = {\r\n    //color values\r\n    color: [0,0,0,0],\r\n\r\n    //rps\r\n    rpsMultiplier: 1,\r\n    \r\n    //click\r\n    clickValue: 1,\r\n    clickMultiplier: 1,\r\n    \r\n    //vertex\r\n    vertices: 0,\r\n    vertexRpsMultiplier: 0,\r\n    vertexClickMultiplier: 0,\r\n    clickValuePerVertex: 0,\r\n\r\n}","import { values } from \"./data/values\"\r\nimport { upgrades } from \"./data/upgrades\"\r\nimport { redToRgb } from \"./colorCalc\"\r\n\r\nexport const handleUpgrade = (id, rps) => {\r\n    \r\n    const upgrade = upgrades[id]\r\n    const modifier = upgrade.effectModifier\r\n    \r\n    //Separate vertex.x to an array of two strings\r\n    const typeArray = upgrade.type.split(\".\")\r\n    const type = typeArray[0]\r\n    \r\n    switch(modifier){\r\n        case \"multiply\":\r\n            multiplyValue(type, upgrade.effect)\r\n            break\r\n        case \"add\":\r\n            addValue(type, upgrade.effect)\r\n            break\r\n        case \"time\":\r\n            addColor(upgrade.effect, rps)\r\n            break\r\n        }\r\n        \r\n    switch(type){\r\n        case \"vertex\":\r\n            vertexUpgrade(typeArray[1], modifier, upgrade.effect)\r\n            break\r\n        }\r\n}\r\n\r\nfunction multiplyValue(upgradeType, multiplier){\r\n    switch(upgradeType){\r\n        case \"rps\":\r\n            values.rpsMultiplier *= multiplier\r\n            break\r\n\r\n        case \"click\":\r\n            values.clickMultiplier *= multiplier\r\n            break\r\n    }\r\n}\r\n\r\nfunction addValue(upgradeType, addAmount){\r\n    switch(upgradeType){\r\n        case \"rps\":\r\n            //n/a\r\n            break\r\n        case \"click\":\r\n            values.clickValue += addAmount\r\n            break\r\n    }\r\n}\r\n\r\nfunction addColor(time, rps){\r\n    let red = (time*60)*rps\r\n    const rgb = redToRgb(red)\r\n\r\n    values.color.forEach((c,i) => {\r\n        values.color[i] += rgb[i]\r\n    })\r\n}\r\n\r\nfunction vertexUpgrade(type, modifier, effect){\r\n    switch(type){\r\n        case \"rps\":\r\n            if(modifier === \"add\"){\r\n                values.vertexRpsMultiplier += effect\r\n            } else if(modifier === \"multiply\"){\r\n                values.vertexRpsMultiplier *= effect\r\n            }\r\n            break\r\n        case \"click\":\r\n            if(modifier === \"add\"){\r\n                values.clickValuePerVertex += effect\r\n            } else if(modifier === \"multiply\"){\r\n                values.clickValuePerVertex *= effect\r\n            }\r\n            break\r\n    }\r\n}","import \"./styles/notification.css\"\r\n\r\n\r\nconst Notification = ({important = false, text}) => {\r\n\r\n\r\n    return (\r\n        <div className={important ? \"notification important\" : \"notification simple\"}>\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useRef, useState } from \"react\"\r\nimport Generator from \"./Generator\"\r\nimport Upgrade from \"./Upgrade\"\r\nimport \"./styles/game.css\"\r\nimport { useInterval } from \"../js/interval.jsx\"\r\nimport { redToRgb, rgbToRed, buy, handleBigNumber } from \"../js/colorCalc.jsx\"\r\nimport { generators, levelThresholds } from  \"../js/data/generators.js\"\r\nimport { upgrades } from \"../js/data/upgrades.js\"\r\nimport { generatorUpgrades } from \"../js/data/generatorUpgrades\"\r\nimport { handleUpgrade } from \"../js/upgradeHandler.jsx\"\r\nimport { values } from \"../js/data/values.js\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport { options } from \"../js/data/options\"\r\nimport { click } from \"../js/click\"\r\nimport Notification from \"./Notification\"\r\n\r\nfunction Game(){\r\n    \r\n    //cookies\r\n    const [cookies, setCookie, removeCookie] = useCookies([])\r\n\r\n    //menus\r\n    const [isMenuOpen, setIsMenuOpen] = useState({left: false, right: false})\r\n    \r\n    //fps\r\n    const [framerate, setFramerate] = useState(30)\r\n    \r\n    //game\r\n    const [isActive, setIsActive] = useState(true)\r\n    const [generatorElements, setGeneratorElements] = useState([])\r\n    const [upgradeElements, setUpgradeElements] = useState([])\r\n    const [elements, setElements] = useState({\r\n        main: null, header: null, background: null, container: null, transformContainer: null\r\n    })\r\n\r\n    const [sideLength, setSideLength] = useState(0)\r\n\r\n    const [color, setColor] = useState({r: 0, g: 0, b: 0, p: 0})\r\n    \r\n    //click\r\n    const [clickValueRed, setClickValueRed] = useState(values.clickValue*1)\r\n    const [clickValueRgb, setClickValueRgb] = useState([0,0,0,0])\r\n    \r\n    //rps\r\n    const [rps, setRps] = useState(0)\r\n    const [rpt, setRpt] = useState(0)\r\n    const [rgbps, setRgbps] = useState([0,0,0,0])\r\n    const [rgbpt, setRgbpt] = useState([0,0,0,0])\r\n\r\n    //stats\r\n    const [stats, setStats] = useState({\r\n        generatorCount: 0, upgradeCount: 0, totalMultiplier: 1\r\n    })\r\n\r\n    //notifications\r\n    const [notifs, setNotifs] = useState([])\r\n    \r\n    //load game\r\n    useEffect(() => {\r\n        setElements({main: document.querySelector('.the-square'), \r\n        header: document.querySelector(\".App-header\"),\r\n        background: document.querySelector(\".background\"),\r\n        container: document.querySelector(\".square-container\"),\r\n        transformContainer: document.querySelector(\".square-transform-container\")})\r\n        \r\n        //things i need to know because im too lazy to check manually\r\n        console.log(generatorUpgrades.length + upgrades.length + \" total upgrades\")\r\n        \r\n        //Checks if there is any saved data before trying to load it\r\n        if(cookies.values){\r\n            //loads all values from values.js\r\n            for(const property in cookies.values){\r\n                values[property] = cookies.values[property]\r\n            }\r\n        } else {\r\n            console.log(\"welcome!\")\r\n        }\r\n        \r\n        //Checks if there are any bought generators before trying to load them\r\n        if(cookies.generators){\r\n            //loads all generators from generators.js\r\n            generators.forEach((gen, i) => {\r\n                for(const property in cookies.generators[i]){\r\n                    gen[property] = cookies.generators[i][property]\r\n                }\r\n            })\r\n        }\r\n        \r\n        //Checks if there are any upgrades bought before trying to load them\r\n        if(cookies.upgrades){\r\n            upgrades.forEach((upgrade, i) => {\r\n                if(cookies.upgrades[i] != null){\r\n                    upgrade.bought = cookies.upgrades[i].bought\r\n                } else {\r\n                    upgrade.bought = false\r\n                }\r\n            })\r\n        }\r\n\r\n        //Checks if there are option values stored in cookies\r\n        if(cookies.options){\r\n            options.forEach((opt,i) => {\r\n                if(cookies.options[i] != null){\r\n                    opt.value = cookies.options[i].value\r\n                }\r\n            })\r\n        }\r\n        \r\n        //Initial check to make sure the square has any size\r\n        setSideLength(document.querySelector(\".background\").offsetHeight/3)\r\n\r\n        onUpgrade()\r\n    }, [])\r\n        \r\n    //Checks if the window is active or not\r\n    document.addEventListener('visibilitychange', () => {\r\n        if(document.hidden){\r\n            setIsActive(false)\r\n        } else {\r\n            setIsActive(true)\r\n        }\r\n    })\r\n\r\n    window.addEventListener('resize', () => {\r\n        if(elements.background) {\r\n            setSideLength(elements.background.offsetHeight/3)\r\n        }\r\n    })\r\n    \r\n    //intervals\r\n    \r\n    //save the game once every half minute\r\n    useInterval(() => {\r\n        //Loops through generators and saves how many are bought\r\n        //and how much they currently cost\r\n        let generatorData = []\r\n        generators.forEach((gen, i) => {\r\n            generatorData.push({})\r\n            for(const property in generators[i]){\r\n                if(property === \"count\" || property === \"price\" || property === \"multiplier\"){\r\n                    generatorData[i][property] = generators[i][property]\r\n                }\r\n            }\r\n        })\r\n        \r\n        //Loops through upgrades and saves how many are bought\r\n        let upgradeData = []\r\n        upgrades.forEach((upgrade, i) => {\r\n            upgradeData.push({})\r\n            upgradeData[i].bought = upgrade.bought\r\n        })\r\n\r\n        let optionsData = []\r\n        options.forEach((opt,i) => {\r\n            optionsData.push({})\r\n            optionsData[i].value = opt.value\r\n        })\r\n        \r\n        setCookie('values', values)\r\n        setCookie('generators', generatorData)\r\n        setCookie('upgrades', upgradeData)\r\n        setCookie('options', optionsData)\r\n\r\n        console.log(\"saved\")\r\n        addNotification(\"Saved\")\r\n    }, 60000)\r\n    \r\n    //increments rgb each tick\r\n    useInterval(() => {\r\n        if(rps > 0){\r\n            incrementRgb(rgbpt)\r\n        }\r\n        if(framerate != options[5].value){\r\n            setFramerate(options[5].value)\r\n        }\r\n    }, 1000 / framerate)\r\n    \r\n    //handle background color change\r\n    useInterval(() => {\r\n        let bg = elements.main\r\n\r\n        if(rgbps[2] >= 1){\r\n            bg.style.backgroundColor = `rgb(255, 255, ${color.b})`\r\n        } else if(rgbps[1] >= 1){\r\n            bg.style.backgroundColor = `rgb(255, ${color.g}, ${color.b})`\r\n        } else {\r\n            bg.style.backgroundColor = `rgb(${color.r}, ${color.g}, ${color.b})`\r\n        }\r\n    }, 1000 / options[6].value)\r\n    \r\n    //checks if you can afford each generator and applies a filter for those you cannot\r\n    useInterval(() => {\r\n        checkCanAfford()\r\n    }, 1000/2) //lower if necessary\r\n    \r\n    //convertions\r\n    \r\n    useEffect(() => {\r\n        setClickValueRgb(redToRgb(clickValueRed))\r\n    }, [clickValueRed])\r\n    \r\n    //sets rpt and rgbps every time rps changes\r\n    useEffect(() => {        \r\n        if(!document.hidden){\r\n            setRpt(rps/(1000/(1000/framerate)))\r\n        } else {\r\n            setRpt(rps)\r\n        }\r\n        setRgbps(redToRgb(rps))\r\n    }, [rps, framerate, isActive])\r\n    \r\n    //set rgbpt every time rpt changes\r\n    useEffect(() => {\r\n        setRgbpt(redToRgb(rpt))\r\n    }, [rpt])\r\n    \r\n    //updates the background color to color values after loading the game, probably not necessary\r\n    useEffect(() => {\r\n        if(elements.main != null){\r\n            elements.main.style.backgroundColor = `rgb(${color.r}, ${color.g}, ${color.b})`\r\n        }\r\n    }, [elements.main])\r\n    \r\n    function checkCanAfford(){\r\n        const c = values.color\r\n        \r\n        generators.forEach((gen, i) => {\r\n            if(rgbToRed(Object.assign({}, gen.price)) > rgbToRed([c[0], c[1], c[2], c[3]])){\r\n                document.querySelector(`#generator-${i}`).classList.add(\"cannot-afford\")\r\n            }else {\r\n                document.querySelector(`#generator-${i}`).classList.remove(\"cannot-afford\")\r\n            }\r\n        })\r\n\r\n        upgrades.forEach((upgrade, i) => {\r\n            if(upgrade.bought){\r\n                return\r\n            }\r\n\r\n            const upgradeElement = document.querySelector(`#upgrade-${i}`)\r\n\r\n            if(upgradeElement){   \r\n                if(rgbToRed(Object.assign({}, upgrade.price)) > rgbToRed([c[0], c[1], c[2], c[3]])){\r\n                    upgradeElement.classList.add(\"cannot-afford\")\r\n                }else {\r\n                    upgradeElement.classList.remove(\"cannot-afford\")\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    function incrementRgb(rgb){\r\n        const c = values.color\r\n        values.color = [c[0] + rgb[0], c[1] + rgb[1], c[2] + rgb[2], c[3] + rgb[3]]\r\n        checkRgb()\r\n    }\r\n    \r\n    function checkRgb(){\r\n        let c = redToRgb(rgbToRed(values.color))\r\n        values.color = c\r\n        \r\n        setColor({r: c[0], g: c[1], b: c[2], p: c[3]})\r\n    }\r\n    \r\n    function calculateStats(){\r\n        let rps = 0\r\n        let vertices = 0\r\n        let genCount = 0\r\n        generators.forEach((gen, i) => {\r\n            let genRps = gen.count * gen.baseRps\r\n\r\n            //Checks if the current generator has a multiplier\r\n            if(gen.multiplier){\r\n                genRps *= gen.multiplier\r\n            }\r\n\r\n            rps += genRps\r\n            vertices += (gen.count * gen.vertices)\r\n            genCount += gen.count\r\n        })\r\n        values.vertices = vertices\r\n\r\n        let upgradeCount = 0\r\n        upgrades.forEach((upgrade, i) => {\r\n            if(upgrade.bought){\r\n                upgradeCount++\r\n            }\r\n        })\r\n        \r\n        let mult = values.rpsMultiplier\r\n        let clickMult = values.clickMultiplier\r\n\r\n        if(vertices > 0){\r\n            mult *= 1 + (vertices * values.vertexRpsMultiplier)\r\n            clickMult *= 1 + (vertices * values.vertexClickMultiplier)\r\n        }\r\n\r\n        let totalClickValue = (values.clickValue + (vertices * values.clickValuePerVertex)) * clickMult\r\n        let totalRps = rps * mult\r\n\r\n        setClickValueRed(totalClickValue)\r\n        setRps(totalRps)\r\n        setStats({generatorCount: genCount, upgradeCount: upgradeCount, totalMultiplier: mult})\r\n        values.rps = totalRps\r\n\r\n        //Calculate each individual generator's rps\r\n        generators.forEach((gen, i) => {\r\n            gen.rps = gen.baseRps * mult\r\n            if(gen.multiplier){\r\n                gen.rps *= gen.multiplier\r\n            }\r\n        })\r\n    }\r\n    \r\n    function checkMultiplier(){\r\n        let generatorElements = generators.map((gen, i) => {\r\n            return <Generator key={i} genId={i} onClick={() => tryBuy(i)} /> \r\n        })\r\n\r\n        setGeneratorElements(generatorElements)\r\n    }\r\n\r\n    function onUpgrade(){\r\n        //Sorts upgrades by price and adds them to the list\r\n        const sortedUpgrades = upgrades.sort((a,b) => {\r\n            let aPrice = rgbToRed(Object.assign({}, a.price))\r\n            let bPrice = rgbToRed(Object.assign({}, b.price))\r\n            return aPrice - bPrice\r\n        })\r\n        let upgradeElements = sortedUpgrades.map((upgrade, i) => { \r\n            if(!upgrade.bought){\r\n                return <Upgrade key={i} upgradeId={i} onClick={() => tryBuyUpgrade(i)}/>\r\n            } else {\r\n                return\r\n            }\r\n        })\r\n        setUpgradeElements(upgradeElements)\r\n        \r\n        checkRgb()\r\n        calculateStats()\r\n        checkMultiplier()\r\n    }\r\n    \r\n    function onClick(e) {\r\n        click(e, elements, clickValueRed)\r\n        incrementRgb(clickValueRgb)\r\n    }\r\n\r\n    function addNotification(text, important = false){\r\n        const notif = <Notification text={text} important={important} />\r\n    \r\n        setNotifs([notif])\r\n        setTimeout(() => {\r\n            setNotifs([])\r\n        }, important ? 4000 : 2500);\r\n    }\r\n\r\n    //buying generators\r\n    function tryBuy(id){\r\n        const gen = generators[id]\r\n        const price = Object.assign({}, gen.price)\r\n        const c = values.color\r\n\r\n        const remainder = buy([c[0], c[1], c[2], c[3]], price)\r\n\r\n        if(remainder != null){\r\n            values.color = [remainder[0], remainder[1], remainder[2], remainder[3]]\r\n            gen.count += 1\r\n            \r\n            let multiplier = 1\r\n            \r\n            for(const i in levelThresholds){\r\n                const t = levelThresholds[i].threshold\r\n                const bonus = levelThresholds[i].bonus\r\n\r\n                if(gen.count >= t){\r\n                    multiplier *= bonus\r\n                } else {\r\n                    break\r\n                } \r\n            }\r\n\r\n            gen.multiplier = multiplier\r\n\r\n            //increase price of the generator when buying\r\n            const priceIncreasePercentage = (108 + id)/100\r\n            gen.price = redToRgb(Math.floor(rgbToRed(price)*priceIncreasePercentage))\r\n            \r\n            calculateStats()\r\n            checkCanAfford()\r\n            checkMultiplier()\r\n        }\r\n    }\r\n    \r\n    function tryBuyUpgrade(id){\r\n        const upgrade = upgrades[id]\r\n        const price = Object.assign({}, upgrade.price)\r\n        const c = values.color\r\n        const remainder = buy([c[0], c[1], c[2], c[3]], price)\r\n\r\n        if(remainder != null){\r\n            values.color = [remainder[0], remainder[1], remainder[2], remainder[3]]\r\n            handleUpgrade(id, values.rps)\r\n            \r\n            upgrade.bought = true\r\n            onUpgrade()\r\n            checkCanAfford()\r\n        }\r\n    }\r\n    \r\n    function openMenu(dir){\r\n        const menu = document.querySelector(`.${dir}-menu`)\r\n        const button = document.querySelector(`.open-${dir}`)\r\n\r\n        menu.classList.toggle(`hidden-${dir}`)\r\n\r\n        isMenuOpen[dir] ? button.firstChild.innerText = \">\" : button.firstChild.innerText = \"<\"\r\n\r\n        setIsMenuOpen({...isMenuOpen, [dir]: !isMenuOpen[dir]})\r\n    }\r\n\r\n     const leftMenu = <div className=\"left-menu side-menu\">\r\n         <div className=\"left-menu-content menu-content\">\r\n             <h4>Upgrades</h4>\r\n             {upgradeElements}\r\n         </div>\r\n         <button className=\"open-left menu-button\" onClick={() => openMenu(\"left\")}><span>{\">\"}</span></button>\r\n     </div>\r\n     \r\n     const rightMenu = <div className=\"right-menu side-menu\">\r\n        <button className=\"open-right menu-button\" onClick={() => openMenu(\"right\")}><span>{\">\"}</span></button>\r\n         <div className=\"right-menu-content menu-content\">\r\n            <h4>Generators</h4>\r\n            {generatorElements}\r\n             </div>\r\n        </div>\r\n\r\n        const leftStats = <div className=\"stats bottom-right\">\r\n            <p>R/t: {rpt.toFixed(2)}</p>\r\n            <p>RGB/s: {rgbps[0].toFixed(2)}, {rgbps[1]}, {rgbps[2]}, {rgbps[3]}</p>\r\n            <p>RGB/t: {rgbpt[0].toFixed(2)}, {rgbpt[1]}, {rgbpt[2]}, {rgbpt[3]}</p>\r\n            <p>R/click: {clickValueRed}</p>\r\n        </div>\r\n\r\n        const rightStats = <div className=\"stats bottom-left\">\r\n            <p>Total multiplier: {stats.totalMultiplier.toFixed(3)}x</p>\r\n            <p>Total Generators: {stats.generatorCount}</p>\r\n            <p>Vertices: {values.vertices}</p>\r\n            <p>Upgrades purchased: {stats.upgradeCount}</p>\r\n        </div>\r\n\r\n        function test() {\r\n            let sideLength = 0\r\n            if(elements.background != null){\r\n                sideLength = elements.background.offsetHeight/3\r\n            }\r\n            return {height: sideLength, width: sideLength }\r\n        }\r\n\r\n        const theSquare = <div className=\"the-square square-clip\" onClick={onClick} style={{\r\n            height: (sideLength > 160 ? sideLength : 160) + \"px\" , \r\n            width: (sideLength > 160 ? sideLength : 160) + \"px\"\r\n            }}>\r\n        </div>\r\n\r\n    return (\r\n        <section>\r\n        <div className=\"background\"></div>\r\n            <div className={\"color-values \"}>\r\n                <span className=\"cur-r\">\r\n                    {Math.floor(color.r)}\r\n                </span>\r\n                <span className=\"cur-g\">\r\n                    {color.g}\r\n                </span>\r\n                <span className=\"cur-b\">\r\n                    {color.b}\r\n                </span>\r\n                <span className=\"cur-p\">\r\n                    {handleBigNumber(color.p)} px\r\n                </span>\r\n                <p>rps: {handleBigNumber(rps.toFixed(1))}</p>\r\n            </div>\r\n                <div className=\"square-container\">\r\n                    <div className=\"square-transform-container\">\r\n\r\n                    {theSquare}\r\n                    <div className=\"square-background\" style={{\r\n                        height: (sideLength > 160 ? sideLength : 160) + \"px\" , \r\n                        width: (sideLength > 160 ? sideLength : 160) + \"px\"\r\n                    }}></div>\r\n                    </div>\r\n                </div>\r\n            {leftMenu}\r\n            {rightMenu}\r\n            {options[4].value ? leftStats : null}\r\n            {options[4].value ? rightStats : null}\r\n            {notifs}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Game","import { options } from \"./data/options\"\r\nimport { handleBigNumber } from \"./colorCalc\"\r\n\r\nexport const click = (e, elements, clickValueRed) => {\r\n    elements.transformContainer.classList.remove(\"on-click\")\r\n\r\n\r\n    let headerHeight, x, y, randomWidthOffset = 0, randomHeightOffset = 0\r\n    //checks options if any click effects are enabled\r\n    if(options[1].value || options[3].value){\r\n        headerHeight = elements.header.offsetHeight\r\n        \r\n        //getting pointer location and accounts for header\r\n        x = e.clientX\r\n        y = e.clientY\r\n\r\n        // console.log(\"x: \" + x + \", y: \" + y)\r\n\r\n        //makes sure the text doesn't appear underneath the header\r\n        randomWidthOffset = Math.floor(Math.random() * 60) - 30\r\n        randomHeightOffset = Math.floor(Math.random() * 40)\r\n    }\r\n    \r\n    //checks if click effect text option is enabled\r\n    if(options[3].value){\r\n        const text = document.createElement(\"span\")\r\n        text.innerText = handleBigNumber(clickValueRed.toFixed(0))\r\n        \r\n        text.className = \"click-text effect\"\r\n        elements.container.appendChild(text)\r\n\r\n        let textX = x - text.offsetWidth + randomWidthOffset + (text.offsetWidth / 2)\r\n        let textY = y - text.offsetHeight - randomHeightOffset\r\n        \r\n        if(textY <= 0){\r\n            textY = 8\r\n        }\r\n        \r\n        text.style.left = `${textX}px`\r\n        text.style.top = `${textY}px`\r\n        \r\n        setTimeout(() => { text.remove() }, 800);\r\n    }\r\n    \r\n    //checks if click effect graphic option is enabled\r\n    if(options[1].value){\r\n        const clickEffect = document.createElement(\"div\")\r\n        clickEffect.style.position = \"absolute\"\r\n        elements.main.appendChild(clickEffect)\r\n                \r\n        switch(options[2].value){\r\n            case \"ripple\":\r\n                clickEffect.className = \"ripple effect\"\r\n                break\r\n            case \"material ripple\":\r\n                clickEffect.className = \"ripple-simple effect\"\r\n                break\r\n                case \"splash\":\r\n                clickEffect.className = \"splash effect\"\r\n\r\n                for(let i = 0; i < 5; i++){\r\n                    const fx = document.createElement(\"div\")\r\n                    let deg = Math.random() * 360 \r\n\r\n                    fx.classList.add(\"splash-line\")\r\n\r\n                    fx.style.transform = `rotate(${deg}deg)`\r\n\r\n                    clickEffect.appendChild(fx)\r\n                }\r\n                break\r\n        }\r\n\r\n\r\n        let distanceY = window.pageYOffset + elements.main.getBoundingClientRect().top\r\n        let distanceX = window.pageXOffset + elements.main.getBoundingClientRect().left\r\n\r\n        clickEffect.style.left = `${x - distanceX - clickEffect.offsetWidth / 2}px`\r\n        clickEffect.style.top = `${y - distanceY - clickEffect.offsetHeight / 2}px`\r\n\r\n        setTimeout(() => { clickEffect.remove() }, 400);\r\n    }\r\n    elements.transformContainer.classList.add(\"on-click\")\r\n\r\n}","import React from 'react'\r\nimport \"./styles/tooltip.css\"\r\nconst Tooltip = ({ text }) => {\r\n    return (\r\n        <div className={\"tooltip\"}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tooltip","import { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { options } from \"../js/data/options.js\"\r\nimport \"./styles/options.css\"\r\nimport Tooltip from \"./Tooltip.jsx\"\r\n\r\nconst Option = ({ optionId, callback }) => {\r\n    const [opt, setOpt] = useState(options[optionId])\r\n    const [action, setAction] = useState()\r\n    const [isEnabled, setIsEnabled] = useState(false)\r\n    const [dropdownValue, setDropdownValue] = useState(\"\")\r\n    const [tooltip, setTooltip] = useState()\r\n\r\n    useEffect(() => {\r\n        let el = <div></div>\r\n\r\n        switch (opt.type) {\r\n            case \"switch\":\r\n                el = <div className={`switch-icon ${opt.value ? \"enabled\" : \"disabled\"}`}><div /></div>\r\n                setIsEnabled(opt.value)\r\n                break\r\n            case \"dropdown\":\r\n                const values = opt.typeValues.map((v, i) => {\r\n                    return <option key={i} id={`option-${i}`} value={v}>{v}</option>\r\n                })\r\n\r\n                el = <select id={`option-${optionId}`} value={opt.value} name={opt.title}\r\n                    onChange={(e) => {\r\n                        opt.value = e.target.value\r\n                        setDropdownValue(opt.value)\r\n                    }}>\r\n                    {values}\r\n                </select>\r\n                break\r\n                case \"button\":\r\n                    el = <div className={`button`} onClick={onClick}><div>{opt.value}</div></div>\r\n                    break\r\n        }\r\n        \r\n        setAction(el)\r\n    }, [isEnabled, dropdownValue])\r\n    \r\n    function onClick() {\r\n        if (opt.type === \"switch\") {\r\n            opt.value = !opt.value\r\n            setIsEnabled(opt.value)\r\n        } else if (opt.type == \"button\") {\r\n            //opt.value is what the button will do\r\n            switch (opt.value) {\r\n                case \"reset\":\r\n                    //add confirmation dialog\r\n                    callback()\r\n                    break\r\n            }\r\n        }\r\n    }    \r\n\r\n    return (\r\n        <div className=\"option\" onClick={opt.type == \"button\" ? null : onClick} \r\n        onMouseEnter={() => {\r\n            setTooltip(<Tooltip text={opt.tooltip}/>)\r\n        }}\r\n        onMouseLeave={() => {\r\n            setTooltip(null)\r\n        }}>\r\n            <span>{opt.title}</span>\r\n            {action}\r\n            {tooltip}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Option","import { useState, useEffect } from \"react\"\r\nimport { options } from \"../js/data/options\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport Option from \"./Option\"\r\nimport \"./styles/options.css\"\r\n\r\nconst Options = ({ dismiss }) => {\r\n    const [cookies, setCookie, removeCookie] = useCookies([])\r\n    \r\n    const [optionsElements, setOptionsElements] = useState([])\r\n\r\n    useEffect(() => {\r\n        \r\n        let optionCallback = {}\r\n        const elements = options.map((o, i) => {\r\n            if (o.type == \"button\") {\r\n                switch (o.value) {\r\n                    case \"reset\":\r\n                        console.log(i + \" is reset\")\r\n                        optionCallback = reset\r\n                        break\r\n                }\r\n            }\r\n\r\n            return <Option key={i} optionId={i} callback={() => optionCallback()} />\r\n        })\r\n\r\n        setOptionsElements(elements)\r\n    }, [])\r\n\r\n    function click(e) {\r\n        if (e.currentTarget === e.target) {\r\n\r\n\r\n            //checks if CSS changes needs to be done\r\n            const squareElement = document.querySelector(\".the-square\")\r\n            if(options[2].value == \"splash\"){\r\n                squareElement.classList.remove(\"square-clip\")\r\n            } else {\r\n                squareElement.classList.add(\"square-clip\")\r\n            }\r\n            dismiss()\r\n        }\r\n    }\r\n\r\n    //Clear cookies and reload page\r\n    const reset = () => {\r\n        console.log(\"reset\")\r\n        for (const c in cookies) {\r\n            removeCookie(c.toString())\r\n        }\r\n        window.location.reload()\r\n        console.log(\"removed cookies\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"options-background\" onClick={(e) => click(e)}>\r\n            <div className=\"options-content\">\r\n                <h3>Options</h3>\r\n                <div>\r\n                    {optionsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options","import './App.css';\r\nimport Game from './components/Game'\r\nimport { useCookies } from \"react-cookie\"\r\nimport { useState } from 'react';\r\nimport Options from './components/Options';\r\n\r\nfunction App() {\r\n\r\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false)\r\n\r\n  function toggleOptions(){\r\n    if(isOptionsOpen){\r\n      document.querySelector(\".options-background\").classList.add(\"on-remove\")\r\n      setTimeout(() => {\r\n        setIsOptionsOpen(!isOptionsOpen)\r\n      }, 250);\r\n    } else {\r\n      setIsOptionsOpen(!isOptionsOpen)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h3 className=\"title\">rgb</h3>\r\n        <button className=\"header-button\" onClick={toggleOptions}><h3>options</h3></button>\r\n      </header>\r\n      <main>\r\n        {isOptionsOpen ? <Options  dismiss={toggleOptions}/> : null}\r\n        <Game />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { CookiesProvider } from 'react-cookie'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CookiesProvider>\r\n      <App />\r\n    </CookiesProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}