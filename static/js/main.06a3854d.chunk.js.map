{"version":3,"sources":["js/generators.js","js/options.js","components/Generator.jsx","js/upgrades.js","components/Upgrade.jsx","js/interval.jsx","js/colorCalc.jsx","js/generatorUpgrades.js","js/values.js","js/upgradeHandler.jsx","components/Notification.jsx","components/Game.jsx","js/click.js","components/Option.jsx","components/Options.jsx","App.js","reportWebVitals.js","index.js"],"names":["generators","name","baseRps","basePrice","price","count","vertices","image","imageAnim","levelThresholds","threshold","bonus","options","title","tooltip","type","value","typeValues","Generator","onClick","genId","useState","gen","width","setWidth","level","setLevel","setImage","onBuy","i","t","prevT","widthPercent","useEffect","id","className","onMouseEnter","document","querySelector","classList","contains","onMouseLeave","rps","toFixed","style","src","process","alt","upgrades","description","maxRanks","effect","effectModifier","Upgrade","upgradeId","upgrade","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","redToRgb","red","rgb","parseFloat","next","Math","floor","rgbToRed","buy","currentRgb","priceRgb","priceRed","currentRed","console","log","generatorUpgrades","MaxRanks","values","color","rpsMultiplier","clickValue","clickMultiplier","vertexRpsMultiplier","vertexClickMultiplier","clickValuePerVertex","handleUpgrade","modifier","typeArray","split","upgradeType","multiplier","multiplyValue","addAmount","addValue","time","forEach","c","addColor","vertexUpgrade","Notification","important","text","Game","useCookies","cookies","setCookie","left","right","isMenuOpen","setIsMenuOpen","framerate","setFramerate","isActive","setIsActive","generatorElements","setGeneratorElements","upgradeElements","setUpgradeElements","main","header","elements","setElements","r","g","b","p","setColor","clickValueRed","setClickValueRed","clickValueRgb","setClickValueRgb","setRps","rpt","setRpt","rgbps","setRgbps","rgbpt","setRgbpt","generatorCount","upgradeCount","totalMultiplier","stats","setStats","notifs","setNotifs","checkCanAfford","Object","assign","add","remove","bought","upgradeElement","incrementRgb","checkRgb","calculateStats","genCount","genRps","mult","clickMult","totalClickValue","totalRps","checkMultiplier","map","remainder","priceIncreasePercentage","tryBuy","onUpgrade","tryBuyUpgrade","openMenu","dir","menu","button","toggle","firstChild","innerText","length","property","opt","addEventListener","hidden","generatorData","push","upgradeData","optionsData","setTimeout","addNotification","bg","backgroundColor","leftMenu","rightMenu","leftStats","rightStats","e","headerHeight","x","y","randomWidthOffset","randomHeightOffset","offsetHeight","clientX","clientY","random","createElement","appendChild","textX","offsetWidth","textY","top","clickEffect","position","fx","deg","transform","click","Option","optionId","action","setAction","isEnabled","setIsEnabled","dropdownValue","setDropdownValue","el","v","onChange","target","Options","dismiss","optionsElements","setOptionsElements","o","currentTarget","App","removeCookie","isOptionsOpen","setIsOptionsOpen","toggleOptions","toString","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.06a3854d.chunk.js","sourcesContent":["export const generators = [\r\n    //tier 1\r\n    {\r\n        name: \"Triangle\",\r\n        baseRps: 0.2, //150s\r\n        basePrice: [30,0,0],\r\n        price: [30,0,0],\r\n        count: 0,\r\n        vertices: 3,\r\n        image: \"/assets/generators/triangle.png\",\r\n        imageAnim: \"/assets/generators/triangle-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Square\",\r\n        baseRps: 1, //200s\r\n        basePrice: [200,0,0],\r\n        price: [200,0,0],\r\n        count: 0,\r\n        vertices: 4,\r\n        image: \"/assets/generators/square.png\",\r\n        imageAnim: \"/assets/generators/square-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Pentagon\",\r\n        baseRps: 3, //256s\r\n        basePrice: [0,3,0],\r\n        price: [0,3,0],\r\n        count: 0,\r\n        vertices: 5,\r\n        image: \"/assets/generators/pentagon.png\",\r\n        imageAnim: \"/assets/generators/pentagon-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Hexagon\",\r\n        baseRps: 15, //307.2s\r\n        basePrice: [0,18,0],\r\n        price: [0,18,0],\r\n        count: 0,\r\n        vertices: 6,\r\n        image: \"/assets/generators/hexagon.png\",\r\n        imageAnim: \"/assets/generators/hexagon-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Septagon\",\r\n        baseRps: 50, //409.6s\r\n        basePrice: [0,80,0],\r\n        price: [0,80,0],\r\n        count: 0,\r\n        vertices: 7,\r\n        image: \"/assets/generators/septagon.png\",\r\n        imageAnim: \"/assets/generators/septagon-anim.gif\"\r\n    },\r\n    {\r\n        name: \"Octagon\",\r\n        baseRps: 125, //524.288s\r\n        basePrice: [0,0,1],\r\n        price: [0,0,1],\r\n        count: 0,\r\n        vertices: 8,\r\n        image: \"/assets/generators/octagon.png\",\r\n        imageAnim: \"/assets/generators/octagon-anim.gif\"\r\n    },\r\n\r\n    //tier 2\r\n    {\r\n        name: \"Pyramid\",\r\n        baseRps: 750, //436.9s\r\n        basePrice: [0,0,5],\r\n        price: [0,0,5],\r\n        count: 0,\r\n        vertices: 5,\r\n        image: \"\",\r\n        imageAnim: \"\"\r\n    },\r\n    {\r\n        name: \"Cube\",\r\n        baseRps: 3000, //524.288s\r\n        basePrice: [0,0,24],\r\n        price: [0,0,24],\r\n        count: 0,\r\n        vertices: 8,\r\n        image: \"\",\r\n        imageAnim: \"\"\r\n    },\r\n    {\r\n        name: \"Dodecahedron\",\r\n        baseRps: 12000, //546.13s\r\n        basePrice: [0,0,100],\r\n        price: [0,0,100],\r\n        count: 0,\r\n        vertices: 20,\r\n        image: \"\",\r\n        imageAnim: \"\"\r\n    },\r\n]\r\n\r\nexport const levelThresholds = [\r\n    {\r\n        threshold: 10,\r\n        bonus: 1.1\r\n    },\r\n    {\r\n        threshold: 25,\r\n        bonus: 1.2\r\n    },\r\n    {\r\n        threshold: 50,\r\n        bonus: 1.25\r\n    },\r\n    {\r\n        threshold: 75,\r\n        bonus: 1.1\r\n    },\r\n    {\r\n        threshold: 100,\r\n        bonus: 1.5\r\n    },\r\n    {\r\n        threshold: 150,\r\n        bonus: 1.2\r\n    },\r\n    {\r\n        threshold: 200,\r\n        bonus: 1.5\r\n    },\r\n    {\r\n        threshold: 250,\r\n        bonus: 1.2\r\n    },\r\n    {\r\n        threshold: 300,\r\n        bonus: 1.25\r\n    },\r\n    {\r\n        threshold: 400,\r\n        bonus: 1.25\r\n    },\r\n    {\r\n        threshold: 500,\r\n        bonus: 1.25\r\n    },\r\n]","export const options = [\r\n    //types: switch, dropdown, custom?\r\n    {\r\n        title: \"Enable animations\",\r\n        tooltip: \"Enable animations like Generators spinning when hovering over them\",\r\n        type: \"switch\",\r\n        value: true,\r\n    },\r\n    {\r\n        title: \"Enable click effect\",\r\n        tooltip: \"Enables a graphical effect when clicking\",\r\n        type: \"switch\",\r\n        value: true,\r\n    },\r\n    {\r\n        title: \"Click effect\",\r\n        tooltip: \"What effect to be shown when clicking\",\r\n        type: \"dropdown\",\r\n        typeValues: [\"ripple\", \"material ripple\", \"splash\"],\r\n        value: \"material ripple\",\r\n    },\r\n    {\r\n        title: \"Enable click text\",\r\n        tooltip: \"Enables the the text shown when clicking\",\r\n        type: \"switch\",\r\n        value: true,\r\n    },\r\n    {\r\n        title: \"Show stats on-screen\",\r\n        tooltip: \"Show statistics like total multiplier, vertice count, amount of upgrades purchased etc. on the main screen\",\r\n        type: \"switch\",\r\n        value: false,\r\n    },\r\n    {\r\n        title: \"Framerate\",\r\n        tooltip: \"How many times numbers are calculated each second. Does not affect RPS. High values might have a negative impact on performance\",\r\n        type: \"dropdown\",\r\n        typeValues: [144, 120, 75, 60, 30, 15, 10, 5, 1],\r\n        value: 30,\r\n    },\r\n    {\r\n        title: \"Background color update frequency\",\r\n        tooltip: \"How many times the background color refreshes each second. Values higher than 5 might have a negative impact on performance\",\r\n        type: \"dropdown\",\r\n        typeValues: [10, 5, 2, 1],\r\n        value: 5,\r\n    },\r\n]","import { useEffect, useState } from \"react\"\r\nimport \"./sideMenuItems.css\"\r\nimport { generators, levelThresholds } from  \"../js/generators.js\"\r\nimport { options } from \"../js/options\"\r\n\r\n\r\nconst Generator = ({onClick, genId}) => {\r\n\r\n    const [gen, setGen] = useState(generators[genId])\r\n    const [width, setWidth] = useState(0)\r\n    const [level, setLevel] = useState(0)\r\n    const [image, setImage] = useState(gen.image)\r\n\r\n    useEffect(() => {\r\n        onBuy()\r\n    }, [])\r\n    \r\n    //Makes sure the progress bar to the next level has the correct width\r\n    function onBuy(){\r\n        for(const i in levelThresholds){\r\n            const t = levelThresholds[i].threshold\r\n            let prevT = 0\r\n            \r\n            if(i > 0){\r\n                prevT = levelThresholds[i-1].threshold\r\n            }\r\n            \r\n            if(gen.count < t){\r\n                const widthPercent = (((gen.count - prevT) / (t - prevT)) % t) * 100\r\n                setWidth(widthPercent)\r\n                setLevel(i)\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id={`generator-${genId}`} className=\"side-menu-item cannot-afford\" onClick={() => {\r\n            onClick()\r\n            onBuy()\r\n        }} \r\n        //prevent images from animating when hovering over things you can't afford, or when animations are disabled\r\n        onMouseEnter={() => { \r\n            if(options[0].value){\r\n                const el = document.querySelector(`#generator-${genId}`)\r\n                if(!el.classList.contains(\"cannot-afford\")){\r\n                    setImage(gen.imageAnim)\r\n                }            \r\n            }\r\n        }\r\n        } \r\n        onMouseLeave={() => setImage(gen.image)} >\r\n            <div>\r\n                <h5>{gen.name}</h5>\r\n                <p>+{gen.rps ? gen.rps.toFixed(2) : gen.baseRps}/s</p>\r\n                <p>({gen.count > 0 ? (gen.rps * gen.count).toFixed(2) : \"0\"}/s)</p>\r\n                <div className=\"generator-price\">\r\n                    <span>{gen.price[0]}</span>\r\n                    <span>{gen.price[1]}</span>\r\n                    <span>{gen.price[2]}</span>\r\n                </div>\r\n                <div className=\"generator-count\">\r\n                    <span>{gen.count}</span>\r\n                    <div className=\"generator-count-bar\" style={{width: `${width}%`}}></div>\r\n                    <span className=\"next-level-bonus\">\r\n                        +{((levelThresholds[level].bonus-1)*100).toFixed(0)}%\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <img className=\"generator-image\" src={process.env.PUBLIC_URL + image} alt={gen.name} />\r\n            <div className=\"prevent-flicker\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Generator","export const upgrades = [\r\n    {\r\n        name: \"Paint brush\",\r\n        description: \"Adds +1 red to your clicks\",\r\n        maxRanks: 10,\r\n        price: [100,0,0],\r\n        effect: 1,\r\n        effectModifier: \"add\" /* add, sub, multiply */,\r\n        type: \"click\",\r\n    },\r\n    {\r\n        name: \"Paint bucket\",\r\n        description: \"Adds +0.1 red to your clicks for each vertex acquired\",\r\n        maxRanks: 5,\r\n        price: [0,10,0],\r\n        effect: 0.1,\r\n        effectModifier: \"add\",\r\n        type: \"vertex.click\",\r\n    },\r\n    {\r\n        name: \"Vertex extraction\",\r\n        description: \"Gains +0.1% RPS for each vertex owned\",\r\n        maxRanks: 10,\r\n        price: [0,10,0],\r\n        effect: 0.001,\r\n        effectModifier: \"add\",\r\n        type: \"vertex.rps\",\r\n    },\r\n    {\r\n        name: \"Brighter colors\",\r\n        description: \"You gain +10% rps\",\r\n        price: [100,1,0],\r\n        effect: 1.1,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Higher saturation\",\r\n        description: \"You gain +20% rps\",\r\n        price: [0,3,0],\r\n        effect: 1.2,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Redder reds\",\r\n        description: \"You gain +30% rps\",\r\n        price: [0,10,0],\r\n        effect: 1.3,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Bluer blues\",\r\n        description: \"You gain +40% rps\",\r\n        price: [0,50,0],\r\n        effect: 1.4,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Greener greens\",\r\n        description: \"You gain +50% rps\",\r\n        price: [0,80,0],\r\n        effect: 1.5,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"CMYK\",\r\n        description: \"Double your rps\",\r\n        price: [0,100,0],\r\n        effect: 2,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"Better color mixing\",\r\n        description: \"Triples your rps\",\r\n        price: [0,150,0],\r\n        effect: 3,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"JPEG artifacts\",\r\n        description: \"For some reasons gains you +1% rps\",\r\n        price: [0,100,0],\r\n        effect: 1.01,\r\n        effectModifier: \"multiply\",\r\n        type: \"rps\",\r\n    },\r\n    //add color to upgrade types\r\n    {\r\n        name: \"SCART connectors\",\r\n        description: \"Awards you 1 minute of rps\",\r\n        price: [0,1,0],\r\n        effect: 1,\r\n        effectModifier: \"time\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"RCA connectors\",\r\n        description: \"Awards you 5 minutes of rps\",\r\n        price: [0,4,0],\r\n        effect: 5,\r\n        effectModifier: \"time\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"VGA connectors\",\r\n        description: \"Awards you 15 minutes of rps\",\r\n        price: [0,75,0],\r\n        effect: 15,\r\n        effectModifier: \"time\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"DVI connectors\",\r\n        description: \"Awards you 30 minutes of rps\",\r\n        price: [0,200,0],\r\n        effect: 30,\r\n        effectModifier: \"time\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"HDMI connectors\",\r\n        description: \"Awards you 45 minutes of rps\",\r\n        price: [0,0,2],\r\n        effect: 45,\r\n        effectModifier: \"time\",\r\n        type: \"rps\",\r\n    },\r\n    {\r\n        name: \"DisplayPort connectors\",\r\n        description: \"Awards you 1 hour of rps\",\r\n        price: [0,0,8],\r\n        effect: 60,\r\n        effectModifier: \"time\",\r\n        type: \"rps\",\r\n    },\r\n]","import \"./sideMenuItems.css\"\r\nimport { upgrades } from \"../js/upgrades\"\r\nimport { useState } from \"react\"\r\n\r\nconst Upgrade = ({onClick, upgradeId}) => {\r\n\r\n    const [upgrade, setUpgrade] = useState(upgrades[upgradeId])\r\n\r\n    return(\r\n        <div id={`upgrade-${upgradeId}`} className=\"side-menu-item cannot-afford\" onClick={onClick}>\r\n            <div>\r\n                <h5>{upgrade.name}</h5>\r\n                <p>{upgrade.description}</p>\r\n                <div className=\"generator-price\">\r\n                    <span>{upgrade.price[0]}</span>\r\n                    <span>{upgrade.price[1]}</span>\r\n                    <span>{upgrade.price[2]}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"prevent-flicker\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upgrade","import { useRef, useEffect } from \"react\"\r\n\r\nexport const useInterval = (callback, delay) => {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }","//turns a value of red into rgb\r\nexport const redToRgb = (red) => {\r\n    let r = parseFloat(red.toFixed(2))\r\n    let rgb = [r,0,0,0]\r\n\r\n    for(let i = 0; i < 3; i++){\r\n        if(rgb[i] >= 256){\r\n            let next = Math.floor(rgb[i]/256)\r\n            rgb[i+1] = next\r\n            rgb[i] %= 256\r\n        }\r\n    }\r\n    \r\n    //old\r\n    // while(r >= 256){\r\n    //     r -= 256\r\n    //     g += 1\r\n    // }\r\n\r\n    // while(g >= 256){\r\n    //     g -= 256\r\n    //     b += 1\r\n    // }\r\n\r\n    // while(b >= 256){\r\n    //     b -= 256\r\n    //     p += 1\r\n    // }\r\n\r\n    return rgb\r\n}\r\n\r\nexport const rgbToRed = (rgb) => {\r\n\r\n    //new\r\n    for(let i = 4; i > 0; i--){\r\n        if(i === 0) break\r\n        \r\n        if(rgb[i] > 0){\r\n            rgb[i-1] += rgb[i] * 256\r\n            rgb[i] = 0\r\n        }\r\n    }\r\n\r\n    //old\r\n    // while(rgb[3] > 0){\r\n    //     rgb[3] -= 1\r\n    //     rgb[2] += 256\r\n    // }\r\n\r\n    // while(rgb[2] > 0){\r\n    //     rgb[2] -= 1\r\n    //     rgb[1] += 256\r\n    // }\r\n\r\n    // while(rgb[1] > 0){\r\n    //     rgb[1] -= 1\r\n    //     rgb[0] += 256\r\n    // }\r\n\r\n    let red = rgb[0]\r\n\r\n    return red\r\n}\r\n\r\nexport const buy = (currentRgb, priceRgb) => {\r\n    let priceRed = rgbToRed(priceRgb)\r\n    let currentRed = rgbToRed(currentRgb)\r\n\r\n    if(currentRed >= priceRed){\r\n        currentRed -= priceRed\r\n    } else {\r\n        console.log(\"cannot afford!!!\")\r\n        return null\r\n    }\r\n\r\n    return redToRgb(currentRed)\r\n}","export const generatorUpgrades = [\r\n    //Triangle\r\n    {\r\n        name: \"Sharper edges\",\r\n        description: \"Your Triangles are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [150,0,0],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    {\r\n        name: \"I guess it kinda looks like a cursor?\",\r\n        description: \"Each triangle add +1 red to your clicks\",\r\n        MaxRanks: 5,\r\n        price: [0,8,0],\r\n        effect: 2,\r\n        effectModifier: \"add\"\r\n    },\r\n    //Square\r\n    { \r\n        name: \"Straighter corners\",\r\n        description: \"Your Squares are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [235,3,0],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    { \r\n        name: \"Square root\",\r\n        description: \"Adds √(amount of Squares)% to your rps\",\r\n        MaxRanks: 1,\r\n        price: [0,12,0],\r\n        effect: 1,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    //Pentagon\r\n    {\r\n        name: \"Demonic angles\",\r\n        description: \"Your Pentagons are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [0,15,0],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    //Hexagon\r\n    {\r\n        name: \"Benzene\",\r\n        description: \"Your Hexagons are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [0,90,0],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    //Septagons\r\n    {\r\n        name: \"Hepta or Septa?\",\r\n        description: \"Your Septagons are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [0,145,1],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    },\r\n    //Octagons\r\n    {\r\n        name: \"1080º\",\r\n        description: \"Your Octagons are 100% more effective\",\r\n        MaxRanks: 10,\r\n        price: [0,0,5],\r\n        effect: 2,\r\n        effectModifier: \"multiply\"\r\n    }\r\n]","export const values = {\r\n    //color values\r\n    color: [0,0,0,0],\r\n\r\n    //rps\r\n    rpsMultiplier: 1,\r\n    \r\n    //click\r\n    clickValue: 1,\r\n    clickMultiplier: 1,\r\n    \r\n    //vertex\r\n    vertices: 0,\r\n    vertexRpsMultiplier: 0,\r\n    vertexClickMultiplier: 0,\r\n    clickValuePerVertex: 0,\r\n\r\n}","import { values } from \"./values\"\r\nimport { upgrades } from \"./upgrades\"\r\nimport { redToRgb } from \"./colorCalc\"\r\n\r\nexport const handleUpgrade = (id, rps) => {\r\n    \r\n    const upgrade = upgrades[id]\r\n    const modifier = upgrade.effectModifier\r\n    \r\n    //Separate vertex.x to an array of two strings\r\n    const typeArray = upgrade.type.split(\".\")\r\n    const type = typeArray[0]\r\n    \r\n    switch(modifier){\r\n        case \"multiply\":\r\n            multiplyValue(type, upgrade.effect)\r\n            break\r\n        case \"add\":\r\n            addValue(type, upgrade.effect)\r\n            break\r\n        case \"time\":\r\n            addColor(upgrade.effect, rps)\r\n            break\r\n        }\r\n        \r\n    switch(type){\r\n        case \"vertex\":\r\n            vertexUpgrade(typeArray[1], modifier, upgrade.effect)\r\n            break\r\n        }\r\n}\r\n\r\nfunction multiplyValue(upgradeType, multiplier){\r\n    switch(upgradeType){\r\n        case \"rps\":\r\n            values.rpsMultiplier *= multiplier\r\n            break\r\n\r\n        case \"click\":\r\n            values.clickMultiplier *= multiplier\r\n            break\r\n    }\r\n}\r\n\r\nfunction addValue(upgradeType, addAmount){\r\n    switch(upgradeType){\r\n        case \"rps\":\r\n            //n/a\r\n            break\r\n        case \"click\":\r\n            values.clickValue += addAmount\r\n            break\r\n    }\r\n}\r\n\r\nfunction addColor(time, rps){\r\n    let red = (time*60)*rps\r\n    const rgb = redToRgb(red)\r\n\r\n    values.color.forEach((c,i) => {\r\n        values.color[i] += rgb[i]\r\n    })\r\n}\r\n\r\nfunction vertexUpgrade(type, modifier, effect){\r\n    switch(type){\r\n        case \"rps\":\r\n            if(modifier === \"add\"){\r\n                values.vertexRpsMultiplier += effect\r\n            } else if(modifier === \"multiply\"){\r\n                values.vertexRpsMultiplier *= effect\r\n            }\r\n            break\r\n        case \"click\":\r\n            if(modifier === \"add\"){\r\n                values.clickValuePerVertex += effect\r\n            } else if(modifier === \"multiply\"){\r\n                values.clickValuePerVertex *= effect\r\n            }\r\n            break\r\n    }\r\n}","import \"./notification.css\"\r\n\r\n\r\nconst Notification = ({important = false, text}) => {\r\n\r\n\r\n    return (\r\n        <div className={important ? \"notification important\" : \"notification simple\"}>\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useRef, useState } from \"react\"\r\nimport Generator from \"./Generator\"\r\nimport Upgrade from \"./Upgrade\"\r\nimport \"./game.css\"\r\nimport { useInterval } from \"../js/interval.jsx\"\r\nimport { redToRgb, rgbToRed, buy } from \"../js/colorCalc.jsx\"\r\nimport { generators, levelThresholds } from  \"../js/generators.js\"\r\nimport { upgrades } from \"../js/upgrades.js\"\r\nimport { generatorUpgrades } from \"../js/generatorUpgrades\"\r\nimport { handleUpgrade } from \"../js/upgradeHandler.jsx\"\r\nimport { values } from \"../js/values.js\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport { options } from \"../js/options\"\r\nimport { click } from \"../js/click\"\r\nimport Notification from \"./Notification\"\r\n\r\nfunction Game(){\r\n    \r\n    //cookies\r\n    const [cookies, setCookie, removeCookie] = useCookies([])\r\n\r\n    //menus\r\n    const [isMenuOpen, setIsMenuOpen] = useState({left: false, right: false})\r\n    \r\n    //fps\r\n    const [framerate, setFramerate] = useState(30)\r\n    \r\n    //game\r\n    const [isActive, setIsActive] = useState(true)\r\n    const [generatorElements, setGeneratorElements] = useState([])\r\n    const [upgradeElements, setUpgradeElements] = useState([])\r\n    const [elements, setElements] = useState({\r\n        main: null, header: null\r\n    })\r\n\r\n    const [color, setColor] = useState({r: 0, g: 0, b: 0, p: 0})\r\n    \r\n    //click\r\n    const [clickValueRed, setClickValueRed] = useState(values.clickValue*1)\r\n    const [clickValueRgb, setClickValueRgb] = useState([0,0,0,0])\r\n    \r\n    //rps\r\n    const [rps, setRps] = useState(0)\r\n    const [rpt, setRpt] = useState(0)\r\n    const [rgbps, setRgbps] = useState([0,0,0,0])\r\n    const [rgbpt, setRgbpt] = useState([0,0,0,0])\r\n\r\n    //stats\r\n    const [stats, setStats] = useState({\r\n        generatorCount: 0, upgradeCount: 0, totalMultiplier: 1\r\n    })\r\n\r\n    //notifications\r\n    const [notifs, setNotifs] = useState([])\r\n    \r\n    //load game\r\n    useEffect(() => {\r\n        setElements({main: document.querySelector('.square'), \r\n        header: document.querySelector(\".App-header\")})\r\n        \r\n        //things i need to know because im too lazy to check manually\r\n        console.log(generatorUpgrades.length + upgrades.length + \" total upgrades\")\r\n        \r\n        //Checks if there is any saved data before trying to load it\r\n        if(cookies.values){\r\n            //loads all values from values.js\r\n            for(const property in cookies.values){\r\n                values[property] = cookies.values[property]\r\n            }\r\n        } else {\r\n            console.log(\"welcome!\")\r\n        }\r\n        \r\n        //Checks if there are any bought generators before trying to load them\r\n        if(cookies.generators){\r\n            //loads all generators from generators.js\r\n            generators.forEach((gen, i) => {\r\n                for(const property in cookies.generators[i]){\r\n                    gen[property] = cookies.generators[i][property]\r\n                }\r\n            })\r\n        }\r\n        \r\n        //Checks if there are any upgrades bought before trying to load them\r\n        if(cookies.upgrades){\r\n            upgrades.forEach((upgrade, i) => {\r\n                if(cookies.upgrades[i] != null){\r\n                    upgrade.bought = cookies.upgrades[i].bought\r\n                } else {\r\n                    upgrade.bought = false\r\n                }\r\n            })\r\n        }\r\n\r\n        //Checks if there are option values stored in cookies\r\n        if(cookies.options){\r\n            options.forEach((opt,i) => {\r\n                if(cookies.options[i] != null){\r\n                    opt.value = cookies.options[i].value\r\n                }\r\n            })\r\n        }\r\n        \r\n        onUpgrade()\r\n    }, [])\r\n        \r\n        //Checks if the window is active or not\r\n        document.addEventListener('visibilitychange', () => {\r\n            if(document.hidden){\r\n                setIsActive(false)\r\n            } else {\r\n            setIsActive(true)\r\n        }\r\n    })\r\n    \r\n    //intervals\r\n    \r\n    //save the game once every half minute\r\n    useInterval(() => {\r\n        //Loops through generators and saves how many are bought\r\n        //and how much they currently cost\r\n        let generatorData = []\r\n        generators.forEach((gen, i) => {\r\n            generatorData.push({})\r\n            for(const property in generators[i]){\r\n                if(property === \"count\" || property === \"price\" || property === \"multiplier\"){\r\n                    generatorData[i][property] = generators[i][property]\r\n                }\r\n            }\r\n        })\r\n        \r\n        //Loops through upgrades and saves how many are bought\r\n        let upgradeData = []\r\n        upgrades.forEach((upgrade, i) => {\r\n            upgradeData.push({})\r\n            upgradeData[i].bought = upgrade.bought\r\n        })\r\n\r\n        let optionsData = []\r\n        options.forEach((opt,i) => {\r\n            optionsData.push({})\r\n            optionsData[i].value = opt.value\r\n        })\r\n        \r\n        setCookie('values', values)\r\n        setCookie('generators', generatorData)\r\n        setCookie('upgrades', upgradeData)\r\n        setCookie('options', optionsData)\r\n\r\n        console.log(\"saved\")\r\n        addNotification(\"Saved\")\r\n    }, 60000)\r\n    \r\n    //increments rgb each tick\r\n    useInterval(() => {\r\n        if(rps > 0){\r\n            incrementRgb(rgbpt)\r\n        }\r\n        if(framerate != options[5].value){\r\n            setFramerate(options[5].value)\r\n        }\r\n    }, 1000 / framerate)\r\n    \r\n    //handle background color change\r\n    useInterval(() => {\r\n        let bg = elements.main\r\n\r\n        if(rgbps[2] >= 1){\r\n            bg.style.backgroundColor = `rgb(255, 255, ${color.b})`\r\n        } else if(rgbps[1] >= 1){\r\n            bg.style.backgroundColor = `rgb(255, ${color.g}, ${color.b})`\r\n        } else {\r\n            bg.style.backgroundColor = `rgb(${color.r}, ${color.g}, ${color.b})`\r\n        }\r\n    }, 1000 / options[6].value)\r\n    \r\n    //checks if you can afford each generator and applies a filter for those you cannot\r\n    useInterval(() => {\r\n        checkCanAfford()\r\n    }, 1000/2) //lower if necessary\r\n    \r\n    //convertions\r\n    \r\n    useEffect(() => {\r\n        setClickValueRgb(redToRgb(clickValueRed))\r\n    }, [clickValueRed])\r\n    \r\n    //sets rpt and rgbps every time rps changes\r\n    useEffect(() => {        \r\n        if(!document.hidden){\r\n            setRpt(rps/(1000/(1000/framerate)))\r\n        } else {\r\n            setRpt(rps)\r\n        }\r\n        setRgbps(redToRgb(rps))\r\n    }, [rps, framerate, isActive])\r\n    \r\n    //set rgbpt every time rpt changes\r\n    useEffect(() => {\r\n        setRgbpt(redToRgb(rpt))\r\n    }, [rpt])\r\n    \r\n    //updates the background color to color values after loading the game, probably not necessary\r\n    useEffect(() => {\r\n        if(elements.main != null){\r\n            elements.main.style.backgroundColor = `rgb(${color.r}, ${color.g}, ${color.b})`\r\n        }\r\n    }, [elements.main])\r\n    \r\n    function checkCanAfford(){\r\n        const c = values.color\r\n        \r\n        generators.forEach((gen, i) => {\r\n            if(rgbToRed(Object.assign({}, gen.price)) > rgbToRed([c[0], c[1], c[2], c[3]])){\r\n                document.querySelector(`#generator-${i}`).classList.add(\"cannot-afford\")\r\n            }else {\r\n                document.querySelector(`#generator-${i}`).classList.remove(\"cannot-afford\")\r\n            }\r\n        })\r\n\r\n        upgrades.forEach((upgrade, i) => {\r\n            if(upgrade.bought){\r\n                return\r\n            }\r\n\r\n            const upgradeElement = document.querySelector(`#upgrade-${i}`)\r\n\r\n            if(upgradeElement){   \r\n                if(rgbToRed(Object.assign({}, upgrade.price)) > rgbToRed([c[0], c[1], c[2], c[3]])){\r\n                    upgradeElement.classList.add(\"cannot-afford\")\r\n                }else {\r\n                    upgradeElement.classList.remove(\"cannot-afford\")\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    function incrementRgb(rgb){\r\n        const c = values.color\r\n        values.color = [c[0] + rgb[0], c[1] + rgb[1], c[2] + rgb[2], c[3] + rgb[3]]\r\n        checkRgb()\r\n    }\r\n    \r\n    function checkRgb(){\r\n        let c = redToRgb(rgbToRed(values.color))\r\n        values.color = c\r\n        \r\n        setColor({r: c[0], g: c[1], b: c[2], p: c[3]})\r\n    }\r\n    \r\n    function calculateStats(){\r\n        let rps = 0\r\n        let vertices = 0\r\n        let genCount = 0\r\n        generators.forEach((gen, i) => {\r\n            let genRps = gen.count * gen.baseRps\r\n\r\n            //Checks if the current generator has a multiplier\r\n            if(gen.multiplier){\r\n                genRps *= gen.multiplier\r\n            }\r\n\r\n            rps += genRps\r\n            vertices += (gen.count * gen.vertices)\r\n            genCount += gen.count\r\n        })\r\n        values.vertices = vertices\r\n\r\n        let upgradeCount = 0\r\n        upgrades.forEach((upgrade, i) => {\r\n            if(upgrade.bought){\r\n                upgradeCount++\r\n            }\r\n        })\r\n        \r\n        let mult = values.rpsMultiplier\r\n        let clickMult = values.clickMultiplier\r\n\r\n        if(vertices > 0){\r\n            mult *= 1 + (vertices * values.vertexRpsMultiplier)\r\n            clickMult *= 1 + (vertices * values.vertexClickMultiplier)\r\n        }\r\n\r\n        let totalClickValue = (values.clickValue + (vertices * values.clickValuePerVertex)) * clickMult\r\n        let totalRps = rps * mult\r\n\r\n        setClickValueRed(totalClickValue)\r\n        setRps(totalRps)\r\n        setStats({generatorCount: genCount, upgradeCount: upgradeCount, totalMultiplier: mult})\r\n        values.rps = totalRps\r\n\r\n        //Calculate each individual generator's rps\r\n        generators.forEach((gen, i) => {\r\n            gen.rps = gen.baseRps * mult\r\n            if(gen.multiplier){\r\n                gen.rps *= gen.multiplier\r\n            }\r\n        })\r\n    }\r\n    \r\n    function checkMultiplier(){\r\n        let generatorElements = generators.map((gen, i) => {\r\n            return <Generator key={i} genId={i} onClick={() => tryBuy(i)} /> \r\n        })\r\n\r\n        setGeneratorElements(generatorElements)\r\n    }\r\n\r\n    function onUpgrade(){\r\n        let upgradeElements = upgrades.map((upgrade, i) => { \r\n            if(!upgrade.bought){\r\n                return <Upgrade key={i} upgradeId={i} onClick={() => tryBuyUpgrade(i)}/>\r\n            } else {\r\n                return\r\n            }\r\n        })\r\n        setUpgradeElements(upgradeElements)\r\n        \r\n        checkRgb()\r\n        calculateStats()\r\n        checkMultiplier()\r\n    }\r\n    \r\n    function onClick(e) {\r\n        click(e, elements, clickValueRed)\r\n        incrementRgb(clickValueRgb)\r\n    }\r\n\r\n    function addNotification(text, important = false){\r\n        const notif = <Notification text={text} important={important} />\r\n    \r\n        setNotifs([notif])\r\n        setTimeout(() => {\r\n            setNotifs([])\r\n        }, important ? 3000 : 1500);\r\n    }\r\n\r\n    //buying generators\r\n    function tryBuy(id){\r\n        const gen = generators[id]\r\n        const price = Object.assign({}, gen.price)\r\n        const c = values.color\r\n\r\n        const remainder = buy([c[0], c[1], c[2], c[3]], price)\r\n\r\n        if(remainder != null){\r\n            values.color = [remainder[0], remainder[1], remainder[2], remainder[3]]\r\n            gen.count += 1\r\n            \r\n            let multiplier = 1\r\n            \r\n            for(const i in levelThresholds){\r\n                const t = levelThresholds[i].threshold\r\n                const bonus = levelThresholds[i].bonus\r\n\r\n                if(gen.count >= t){\r\n                    multiplier *= bonus\r\n                } else {\r\n                    break\r\n                } \r\n            }\r\n\r\n            gen.multiplier = multiplier\r\n\r\n            //increase price of the generator when buying\r\n            const priceIncreasePercentage = (112 + id)/100\r\n            gen.price = redToRgb(Math.floor(rgbToRed(price)*priceIncreasePercentage))\r\n            \r\n            calculateStats()\r\n            checkCanAfford()\r\n            checkMultiplier()\r\n        }\r\n    }\r\n    \r\n    function tryBuyUpgrade(id){\r\n        const upgrade = upgrades[id]\r\n        const price = Object.assign({}, upgrade.price)\r\n        const c = values.color\r\n        const remainder = buy([c[0], c[1], c[2], c[3]], price)\r\n\r\n        if(remainder != null){\r\n            values.color = [remainder[0], remainder[1], remainder[2], remainder[3]]\r\n            handleUpgrade(id, values.rps)\r\n            \r\n            upgrade.bought = true\r\n            onUpgrade()\r\n            checkCanAfford()\r\n        }\r\n    }\r\n    \r\n    function openMenu(dir){\r\n        const menu = document.querySelector(`.${dir}-menu`)\r\n        const button = document.querySelector(`.open-${dir}`)\r\n\r\n        menu.classList.toggle(`hidden-${dir}`)\r\n\r\n        isMenuOpen[dir] ? button.firstChild.innerText = \">\" : button.firstChild.innerText = \"<\"\r\n\r\n        setIsMenuOpen({...isMenuOpen, [dir]: !isMenuOpen[dir]})\r\n    }\r\n\r\n     const leftMenu = <div className=\"left-menu side-menu\">\r\n         <div className=\"left-menu-content menu-content\">\r\n             <h4>Upgrades</h4>\r\n             {upgradeElements}\r\n         </div>\r\n         <button className=\"open-left menu-button\" onClick={() => openMenu(\"left\")}><span>{\">\"}</span></button>\r\n     </div>\r\n     \r\n     const rightMenu = <div className=\"right-menu side-menu\">\r\n        <button className=\"open-right menu-button\" onClick={() => openMenu(\"right\")}><span>{\">\"}</span></button>\r\n         <div className=\"right-menu-content menu-content\">\r\n            <h4>Generators</h4>\r\n            {generatorElements}\r\n             </div>\r\n        </div>\r\n\r\n        const leftStats = <div className=\"stats bottom-right\">\r\n            <p>R/t: {rpt.toFixed(2)}</p>\r\n            <p>RGB/s: {rgbps[0].toFixed(2)}, {rgbps[1]}, {rgbps[2]}, {rgbps[3]}</p>\r\n            <p>RGB/t: {rgbpt[0].toFixed(2)}, {rgbpt[1]}, {rgbpt[2]}, {rgbpt[3]}</p>\r\n            <p>R/click: {clickValueRed}</p>\r\n        </div>\r\n\r\n        const rightStats = <div className=\"stats bottom-left\">\r\n            <p>Total multiplier: {stats.totalMultiplier.toFixed(3)}x</p>\r\n            <p>Total Generators: {stats.generatorCount}</p>\r\n            <p>Vertices: {values.vertices}</p>\r\n            <p>Upgrades purchased: {stats.upgradeCount}</p>\r\n        </div>\r\n\r\n    return (\r\n        <section>\r\n        <div className=\"square\" onClick={onClick}></div>\r\n            <div className={\"color-values \"}>\r\n                <span className=\"cur-r\">\r\n                    {color.r.toFixed(0)}\r\n                </span>\r\n                <span className=\"cur-g\">\r\n                    {color.g}\r\n                </span>\r\n                <span className=\"cur-b\">\r\n                    {color.b}\r\n                </span>\r\n                <span className=\"cur-p\">\r\n                    {color.p}px\r\n                </span>\r\n                <p>rps: {rps.toFixed(1)}</p>\r\n            </div>\r\n            {leftMenu}\r\n            {rightMenu}\r\n            {options[4].value ? leftStats : null}\r\n            {options[4].value ? rightStats : null}\r\n            {notifs}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Game","import { options } from \"./options\"\r\n\r\nexport const click = (e, elements, clickValueRed) => {\r\n    let headerHeight, x, y, randomWidthOffset = 0, randomHeightOffset = 0\r\n    //checks options if any click effects are enabled\r\n    if(options[1].value || options[3].value){\r\n        headerHeight = elements.header.offsetHeight\r\n        \r\n        //getting pointer location and accounts for header\r\n        x = e.clientX\r\n        y = e.clientY\r\n        \r\n        //makes sure the text doesn't appear underneath the header\r\n        randomWidthOffset = Math.floor(Math.random() * 60) - 30\r\n        randomHeightOffset = Math.floor(Math.random() * 40)\r\n    }\r\n    \r\n    //checks if click effect text option is enabled\r\n    if(options[3].value){\r\n        const text = document.createElement(\"span\")\r\n        text.innerText = clickValueRed.toFixed(0)\r\n        \r\n        text.classList.add(\"click-text\")  \r\n        elements.main.appendChild(text)\r\n\r\n        let textX = x - text.offsetWidth + randomWidthOffset + (text.offsetWidth / 2)\r\n        let textY = y - headerHeight - text.offsetHeight - randomHeightOffset\r\n        \r\n        if(textY <= 0){\r\n            textY = 8\r\n        }\r\n        \r\n        text.style.left = `${textX}px`\r\n        text.style.top = `${textY}px`\r\n        \r\n        setTimeout(() => { text.remove() }, 800);\r\n    }\r\n    \r\n    //checks if click effect graphic option is enabled\r\n    if(options[1].value){\r\n        const clickEffect = document.createElement(\"div\")\r\n        clickEffect.style.position = \"absolute\"\r\n        elements.main.appendChild(clickEffect)\r\n        \r\n        \r\n        switch(options[2].value){\r\n            case \"ripple\":\r\n                clickEffect.classList.add(\"ripple\")  \r\n                break\r\n            case \"material ripple\":\r\n                clickEffect.classList.add(\"ripple-simple\")\r\n                break\r\n                case \"splash\":\r\n                clickEffect.classList.add(\"splash\")\r\n\r\n                for(let i = 0; i < 5; i++){\r\n                    const fx = document.createElement(\"div\")\r\n                    let deg = Math.random() * 360 \r\n\r\n                    fx.classList.add(\"splash-line\")\r\n\r\n                    fx.style.transform = `rotate(${deg}deg)`\r\n\r\n                    clickEffect.appendChild(fx)\r\n                }\r\n                break\r\n        }\r\n        \r\n        clickEffect.style.left = `${x - clickEffect.offsetWidth / 2}px`\r\n        clickEffect.style.top = `${y - headerHeight - clickEffect.offsetHeight / 2}px`\r\n\r\n        setTimeout(() => { clickEffect.remove() }, 500);\r\n    }\r\n}","import { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { options } from \"../js/options.js\"\r\nimport \"./options.css\"\r\n\r\nconst Option = ({optionId}) => {\r\n    const [opt, setOpt] = useState(options[optionId])\r\n    const [action, setAction] = useState()\r\n    const [isEnabled, setIsEnabled] = useState(false)\r\n    const [dropdownValue, setDropdownValue] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        let el = <div></div>\r\n        if(opt.type === \"switch\"){\r\n            el = <div className={`switch-icon ${opt.value ? \"enabled\" : \"disabled\" }`}>\r\n                <div></div></div>\r\n            setIsEnabled(opt.value)\r\n        } else if(opt.type === \"dropdown\"){\r\n            const values = opt.typeValues.map((v,i) => {\r\n                return <option key={i} id={`option-${i}`} value={v}>{v}</option>\r\n            })\r\n            \r\n            el = <select id={`option-${optionId}`} value={opt.value} name={opt.title}\r\n            onChange={(e) => {\r\n                opt.value = e.target.value\r\n                setDropdownValue(opt.value)\r\n            }}>\r\n                {values}\r\n            </select>\r\n        }\r\n        \r\n        setAction(el)\r\n    }, [isEnabled, dropdownValue])\r\n    \r\n    function onClick(){\r\n        if(opt.type === \"switch\"){\r\n            opt.value = !opt.value\r\n            setIsEnabled(opt.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"option\" onClick={onClick}>\r\n            <span>{opt.title}</span>\r\n            {action}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Option","import { useState, useEffect } from \"react\"\r\nimport { options } from \"../js/options\"\r\nimport Option from \"./Option\"\r\nimport \"./options.css\"\r\n\r\nconst Options = ({dismiss}) => {\r\n\r\n    const [optionsElements, setOptionsElements] = useState([])\r\n\r\n    useEffect(() => {\r\n        const elements = options.map((o,i) => {\r\n            return <Option key={i} optionId={i}/>\r\n        })\r\n        \r\n        setOptionsElements(elements)\r\n    }, [])\r\n    \r\n    function click(e){\r\n            if(e.currentTarget === e.target){\r\n                dismiss()\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div className=\"options-background\" onClick={(e) => click(e)}>\r\n                <div className=\"options-content\">\r\n                    <h3>Options</h3>\r\n                    <div>\r\n                        {optionsElements}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Options","import './App.css';\r\nimport Game from './components/Game'\r\nimport { useCookies } from \"react-cookie\"\r\nimport { useState } from 'react';\r\nimport Options from './components/Options';\r\n\r\nfunction App() {\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies([])\r\n  const [isOptionsOpen, setIsOptionsOpen] = useState(false)\r\n\r\n  //Clear cookies and reload page\r\n  function reset(){\r\n    for(const c in cookies){\r\n      removeCookie(c.toString())\r\n    }\r\n    window.location.reload()\r\n  }\r\n\r\n  function toggleOptions(){\r\n    if(isOptionsOpen){\r\n      document.querySelector(\".options-background\").classList.add(\"on-remove\")\r\n      setTimeout(() => {\r\n        setIsOptionsOpen(!isOptionsOpen)\r\n      }, 250);\r\n    } else {\r\n      setIsOptionsOpen(!isOptionsOpen)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h3 className=\"title\">rgb</h3>\r\n        <button className=\"header-button\" onClick={toggleOptions}><h3>options</h3></button>\r\n        <button className=\"header-button\" onClick={reset}><h3>reset</h3></button>\r\n      </header>\r\n      <main>\r\n        {isOptionsOpen ? <Options  dismiss={toggleOptions}/> : null}\r\n        <Game />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { CookiesProvider } from 'react-cookie'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CookiesProvider>\r\n      <App />\r\n    </CookiesProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}